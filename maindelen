#include <pic32mx.h>
#include <stdint.h>
#include <stdlib.h>

int i = 32;
int emoindex = 0;
int timecounter = 0;
int writeRow = 0;

volatile int * trise = (volatile int *) 0xbf886100;
volatile int * porte = (volatile int *) 0xbf886110;

const uint8_t const emoticon[][64] = {
{
0xff, 0xff, 0xff, 0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
0xff, 0xff, 0xff, 0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
},
{
0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,
0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,
0x3f, 0xcf, 0xf7, 0xfb, 0xed, 0xd5, 0xee, 0xfe, 0xfe, 0xee, 0xd5, 0xed, 0xfb, 0xf7, 0xcf, 0x3f,
0xfc, 0xf3, 0xef, 0xdd, 0xbd, 0xba, 0x77, 0x77, 0x77,0x77, 0xba, 0xbd, 0xdd, 0xef, 0xf3, 0xfc
},
{
0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,
0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,
0x7f, 0x8f, 0xf7, 0xfb, 0xed, 0xed, 0xed, 0xfe, 0xfe, 0xed, 0xed, 0xed, 0xfb, 0xf7, 0x8f, 0x7f,
0xfe, 0xf1, 0xef, 0xdf, 0xbd, 0xbd, 0xbd, 0x7d, 0x7d, 0xbd, 0xbd, 0xbd, 0xdf, 0xef, 0xf1, 0xfe
},
{
0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,
0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,
0x7f, 0x8f, 0xf7, 0xfb, 0xf5, 0xe5, 0xed, 0xfe, 0xfe, 0xed, 0xe5, 0xf5, 0xfb, 0xf7, 0x8f, 0x7f,
0xfe, 0xf1, 0xef, 0xdf, 0xb7, 0xbb, 0xbd, 0x7d, 0x7d, 0xbd, 0xbb, 0xb7, 0xdf, 0xef, 0xf1, 0xfe
}
};

const uint8_t const hamburger[] =
{
0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,
0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,
0xff, 0xcf, 0x87, 0x4b, 0x4d, 0x4d, 0x4d, 0x4d, 0x4d, 0x4d, 0x4d, 0x4d, 0x4b, 0x87, 0xcf, 0xff,
0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,
0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff
};


int tama()
{
	display_image(80, emoticon[0]);
	display_image(128, hamburger);

	while(1) {
	volatile int* push_buttons = (volatile int*) getbtns();
	volatile int* one_button = (volatile int*) get1btn();
	volatile int* switches = (volatile int*) getsw();
if(1)
	display_image(80, emoticon[0]);
	emoindex = 1;

if(!(*porte & 0x10))
	emoindex = 2;

if(!(*porte & 0x2))
	emoindex = 3;

if(!(*push_buttons) && !(*one_button) && timecounter > 9)
{
	*porte = *porte >> 1;
	timecounter = 0;
}

if((*push_buttons || *one_button) &&  timecounter > 4)
{
	*porte = (*porte << 1) + 0x1;
	timecounter = 0;
}

display_image(i, emoticon[emoindex]);
if(*push_buttons & 0x4)
{
	display_image(i, emoticon[emoindex]);
	delay(50000);
	if(i == 0)
		i = 79;
	else
		i--;
	display_update();
}

if(*one_button & 0x1)
{
	display_image(i, emoticon[emoindex]);
	delay(50000);
	if(i == 79)
		i = 0;
	else
		i++;
	display_update();
}

if(*push_buttons & 0x2)
{
	writeRow = 0;
	delay( 100000 );
	display_update();
}

if(*one_button & 0x1)
{
	writeRow = 2;
	delay( 100000 );
	display_update();
}

}

for(;;) ;
return 0;
}
